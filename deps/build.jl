using CUDAapi, Pkg

const config_path = joinpath(@__DIR__, "ext.jl")

function write_to_deps(pkgs...)
    project_path = joinpath(@__DIR__, "..", "Project.toml")
    project = Pkg.TOML.parsefile(project_path)

    for (pkg, uuid) in pkgs
        project["deps"][pkg] = uuid
    end

    open(project_path, "w") do f
        Pkg.TOML.print(f, project)
    end
end

function main()
    libcuda_path = find_cuda_library("cuda", find_toolkit())
    if libcuda_path === nothing
        open(config_path, "w") do io
            println(io, "# autogenerated file, do not edit")
            println(io, "const USE_CUDA = false")
        end
    else
        open(config_path, "w") do io
            println(io, "# autogenerated file, do not edit")
            println(io, "const USE_CUDA = true")
        end

        @info "find CUDA, add CuArrays, GPUArrays as dependency"

        write_to_deps(
            "CuArrays" => "3a865a2d-5b23-5a0f-bc46-62713ec82fae",
            "GPUArrays" => "0c68f7d7-f131-5f86-a1c3-88cf8149b2d7"
            )
    end

    Pkg.instantiate()
    Pkg.resolve()
end

main()
